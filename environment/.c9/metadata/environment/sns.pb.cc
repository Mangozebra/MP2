{"changed":true,"filter":false,"title":"sns.pb.cc","tooltip":"/sns.pb.cc","value":"// Generated by the protocol buffer compiler.  DO NOT EDIT!\n// source: sns.proto\n\n#include \"sns.pb.h\"\n\n#include <algorithm>\n\n#include <google/protobuf/io/coded_stream.h>\n#include <google/protobuf/extension_set.h>\n#include <google/protobuf/wire_format_lite.h>\n#include <google/protobuf/descriptor.h>\n#include <google/protobuf/generated_message_reflection.h>\n#include <google/protobuf/reflection_ops.h>\n#include <google/protobuf/wire_format.h>\n// @@protoc_insertion_point(includes)\n#include <google/protobuf/port_def.inc>\n\nPROTOBUF_PRAGMA_INIT_SEG\nnamespace csce438 {\nconstexpr Request::Request(\n  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)\n  : arguments_()\n  , username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}\nstruct RequestDefaultTypeInternal {\n  constexpr RequestDefaultTypeInternal()\n    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}\n  ~RequestDefaultTypeInternal() {}\n  union {\n    Request _instance;\n  };\n};\nPROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RequestDefaultTypeInternal _Request_default_instance_;\nconstexpr Reply::Reply(\n  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)\n  : all_users_()\n  , following_users_()\n  , msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}\nstruct ReplyDefaultTypeInternal {\n  constexpr ReplyDefaultTypeInternal()\n    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}\n  ~ReplyDefaultTypeInternal() {}\n  union {\n    Reply _instance;\n  };\n};\nPROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT ReplyDefaultTypeInternal _Reply_default_instance_;\nconstexpr Message::Message(\n  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)\n  : username_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)\n  , msg_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)\n  , timestamp_(nullptr){}\nstruct MessageDefaultTypeInternal {\n  constexpr MessageDefaultTypeInternal()\n    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}\n  ~MessageDefaultTypeInternal() {}\n  union {\n    Message _instance;\n  };\n};\nPROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT MessageDefaultTypeInternal _Message_default_instance_;\nconstexpr UserInfo::UserInfo(\n  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)\n  : followers_()\n  , userfollows_()\n  , timeline_()\n  , name_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string){}\nstruct UserInfoDefaultTypeInternal {\n  constexpr UserInfoDefaultTypeInternal()\n    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}\n  ~UserInfoDefaultTypeInternal() {}\n  union {\n    UserInfo _instance;\n  };\n};\nPROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT UserInfoDefaultTypeInternal _UserInfo_default_instance_;\n}  // namespace csce438\nstatic ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_sns_2eproto[4];\nstatic constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_sns_2eproto = nullptr;\nstatic constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_sns_2eproto = nullptr;\n\nconst ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_sns_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {\n  ~0u,  // no _has_bits_\n  PROTOBUF_FIELD_OFFSET(::csce438::Request, _internal_metadata_),\n  ~0u,  // no _extensions_\n  ~0u,  // no _oneof_case_\n  ~0u,  // no _weak_field_map_\n  ~0u,  // no _inlined_string_donated_\n  PROTOBUF_FIELD_OFFSET(::csce438::Request, username_),\n  PROTOBUF_FIELD_OFFSET(::csce438::Request, arguments_),\n  ~0u,  // no _has_bits_\n  PROTOBUF_FIELD_OFFSET(::csce438::Reply, _internal_metadata_),\n  ~0u,  // no _extensions_\n  ~0u,  // no _oneof_case_\n  ~0u,  // no _weak_field_map_\n  ~0u,  // no _inlined_string_donated_\n  PROTOBUF_FIELD_OFFSET(::csce438::Reply, msg_),\n  PROTOBUF_FIELD_OFFSET(::csce438::Reply, all_users_),\n  PROTOBUF_FIELD_OFFSET(::csce438::Reply, following_users_),\n  ~0u,  // no _has_bits_\n  PROTOBUF_FIELD_OFFSET(::csce438::Message, _internal_metadata_),\n  ~0u,  // no _extensions_\n  ~0u,  // no _oneof_case_\n  ~0u,  // no _weak_field_map_\n  ~0u,  // no _inlined_string_donated_\n  PROTOBUF_FIELD_OFFSET(::csce438::Message, username_),\n  PROTOBUF_FIELD_OFFSET(::csce438::Message, msg_),\n  PROTOBUF_FIELD_OFFSET(::csce438::Message, timestamp_),\n  ~0u,  // no _has_bits_\n  PROTOBUF_FIELD_OFFSET(::csce438::UserInfo, _internal_metadata_),\n  ~0u,  // no _extensions_\n  ~0u,  // no _oneof_case_\n  ~0u,  // no _weak_field_map_\n  ~0u,  // no _inlined_string_donated_\n  PROTOBUF_FIELD_OFFSET(::csce438::UserInfo, name_),\n  PROTOBUF_FIELD_OFFSET(::csce438::UserInfo, followers_),\n  PROTOBUF_FIELD_OFFSET(::csce438::UserInfo, userfollows_),\n  PROTOBUF_FIELD_OFFSET(::csce438::UserInfo, timeline_),\n};\nstatic const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {\n  { 0, -1, -1, sizeof(::csce438::Request)},\n  { 8, -1, -1, sizeof(::csce438::Reply)},\n  { 17, -1, -1, sizeof(::csce438::Message)},\n  { 26, -1, -1, sizeof(::csce438::UserInfo)},\n};\n\nstatic ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {\n  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_Request_default_instance_),\n  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_Reply_default_instance_),\n  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_Message_default_instance_),\n  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::csce438::_UserInfo_default_instance_),\n};\n\nconst char descriptor_table_protodef_sns_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =\n  \"\\n\\tsns.proto\\022\\007csce438\\032\\037google/protobuf/ti\"\n  \"mestamp.proto\\\".\\n\\007Request\\022\\020\\n\\010username\\030\\001 \\001\"\n  \"(\\t\\022\\021\\n\\targuments\\030\\002 \\003(\\t\\\"@\\n\\005Reply\\022\\013\\n\\003msg\\030\\001 \"\n  \"\\001(\\t\\022\\021\\n\\tall_users\\030\\002 \\003(\\t\\022\\027\\n\\017following_user\"\n  \"s\\030\\003 \\003(\\t\\\"W\\n\\007Message\\022\\020\\n\\010username\\030\\001 \\001(\\t\\022\\013\\n\\003\"\n  \"msg\\030\\002 \\001(\\t\\022-\\n\\ttimestamp\\030\\003 \\001(\\0132\\032.google.pr\"\n  \"otobuf.Timestamp\\\"d\\n\\010UserInfo\\022\\014\\n\\004name\\030\\001 \\001\"\n  \"(\\t\\022\\021\\n\\tfollowers\\030\\002 \\003(\\t\\022\\023\\n\\013userFollows\\030\\003 \\003\"\n  \"(\\t\\022\\\"\\n\\010timeline\\030\\004 \\003(\\0132\\020.csce438.Message2\\371\"\n  \"\\001\\n\\nSNSService\\022+\\n\\005Login\\022\\020.csce438.Request\"\n  \"\\032\\016.csce438.Reply\\\"\\000\\022*\\n\\004List\\022\\020.csce438.Req\"\n  \"uest\\032\\016.csce438.Reply\\\"\\000\\022,\\n\\006Follow\\022\\020.csce4\"\n  \"38.Request\\032\\016.csce438.Reply\\\"\\000\\022.\\n\\010UnFollow\"\n  \"\\022\\020.csce438.Request\\032\\016.csce438.Reply\\\"\\000\\0224\\n\\010\"\n  \"Timeline\\022\\020.csce438.Message\\032\\020.csce438.Mes\"\n  \"sage\\\"\\000(\\0010\\001b\\006proto3\"\n  ;\nstatic const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_sns_2eproto_deps[1] = {\n  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,\n};\nstatic ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_sns_2eproto_once;\nconst ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_sns_2eproto = {\n  false, false, 618, descriptor_table_protodef_sns_2eproto, \"sns.proto\", \n  &descriptor_table_sns_2eproto_once, descriptor_table_sns_2eproto_deps, 1, 4,\n  schemas, file_default_instances, TableStruct_sns_2eproto::offsets,\n  file_level_metadata_sns_2eproto, file_level_enum_descriptors_sns_2eproto, file_level_service_descriptors_sns_2eproto,\n};\nPROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_sns_2eproto_getter() {\n  return &descriptor_table_sns_2eproto;\n}\n\n// Force running AddDescriptors() at dynamic initialization time.\nPROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_sns_2eproto(&descriptor_table_sns_2eproto);\nnamespace csce438 {\n\n// ===================================================================\n\nclass Request::_Internal {\n public:\n};\n\nRequest::Request(::PROTOBUF_NAMESPACE_ID::Arena* arena,\n                         bool is_message_owned)\n  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),\n  arguments_(arena) {\n  SharedCtor();\n  if (!is_message_owned) {\n    RegisterArenaDtor(arena);\n  }\n  // @@protoc_insertion_point(arena_constructor:csce438.Request)\n}\nRequest::Request(const Request& from)\n  : ::PROTOBUF_NAMESPACE_ID::Message(),\n      arguments_(from.arguments_) {\n  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);\n  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n  if (!from._internal_username().empty()) {\n    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), \n      GetArenaForAllocation());\n  }\n  // @@protoc_insertion_point(copy_constructor:csce438.Request)\n}\n\nvoid Request::SharedCtor() {\nusername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n}\n\nRequest::~Request() {\n  // @@protoc_insertion_point(destructor:csce438.Request)\n  if (GetArenaForAllocation() != nullptr) return;\n  SharedDtor();\n  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();\n}\n\ninline void Request::SharedDtor() {\n  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);\n  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n}\n\nvoid Request::ArenaDtor(void* object) {\n  Request* _this = reinterpret_cast< Request* >(object);\n  (void)_this;\n}\nvoid Request::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {\n}\nvoid Request::SetCachedSize(int size) const {\n  _cached_size_.Set(size);\n}\n\nvoid Request::Clear() {\n// @@protoc_insertion_point(message_clear_start:csce438.Request)\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  // Prevent compiler warnings about cached_has_bits being unused\n  (void) cached_has_bits;\n\n  arguments_.Clear();\n  username_.ClearToEmpty();\n  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();\n}\n\nconst char* Request::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {\n#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure\n  while (!ctx->Done(&ptr)) {\n    ::PROTOBUF_NAMESPACE_ID::uint32 tag;\n    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);\n    switch (tag >> 3) {\n      // string username = 1;\n      case 1:\n        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {\n          auto str = _internal_mutable_username();\n          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);\n          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, \"csce438.Request.username\"));\n          CHK_(ptr);\n        } else\n          goto handle_unusual;\n        continue;\n      // repeated string arguments = 2;\n      case 2:\n        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {\n          ptr -= 1;\n          do {\n            ptr += 1;\n            auto str = _internal_add_arguments();\n            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);\n            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, \"csce438.Request.arguments\"));\n            CHK_(ptr);\n            if (!ctx->DataAvailable(ptr)) break;\n          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));\n        } else\n          goto handle_unusual;\n        continue;\n      default:\n        goto handle_unusual;\n    }  // switch\n  handle_unusual:\n    if ((tag == 0) || ((tag & 7) == 4)) {\n      CHK_(ptr);\n      ctx->SetLastTag(tag);\n      goto message_done;\n    }\n    ptr = UnknownFieldParse(\n        tag,\n        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),\n        ptr, ctx);\n    CHK_(ptr != nullptr);\n  }  // while\nmessage_done:\n  return ptr;\nfailure:\n  ptr = nullptr;\n  goto message_done;\n#undef CHK_\n}\n\n::PROTOBUF_NAMESPACE_ID::uint8* Request::_InternalSerialize(\n    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {\n  // @@protoc_insertion_point(serialize_to_array_start:csce438.Request)\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  (void) cached_has_bits;\n\n  // string username = 1;\n  if (!this->_internal_username().empty()) {\n    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(\n      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,\n      \"csce438.Request.username\");\n    target = stream->WriteStringMaybeAliased(\n        1, this->_internal_username(), target);\n  }\n\n  // repeated string arguments = 2;\n  for (int i = 0, n = this->_internal_arguments_size(); i < n; i++) {\n    const auto& s = this->_internal_arguments(i);\n    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(\n      s.data(), static_cast<int>(s.length()),\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,\n      \"csce438.Request.arguments\");\n    target = stream->WriteString(2, s, target);\n  }\n\n  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {\n    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(\n        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);\n  }\n  // @@protoc_insertion_point(serialize_to_array_end:csce438.Request)\n  return target;\n}\n\nsize_t Request::ByteSizeLong() const {\n// @@protoc_insertion_point(message_byte_size_start:csce438.Request)\n  size_t total_size = 0;\n\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  // Prevent compiler warnings about cached_has_bits being unused\n  (void) cached_has_bits;\n\n  // repeated string arguments = 2;\n  total_size += 1 *\n      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(arguments_.size());\n  for (int i = 0, n = arguments_.size(); i < n; i++) {\n    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(\n      arguments_.Get(i));\n  }\n\n  // string username = 1;\n  if (!this->_internal_username().empty()) {\n    total_size += 1 +\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(\n        this->_internal_username());\n  }\n\n  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);\n}\n\nconst ::PROTOBUF_NAMESPACE_ID::Message::ClassData Request::_class_data_ = {\n    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,\n    Request::MergeImpl\n};\nconst ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Request::GetClassData() const { return &_class_data_; }\n\nvoid Request::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,\n                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {\n  static_cast<Request *>(to)->MergeFrom(\n      static_cast<const Request &>(from));\n}\n\n\nvoid Request::MergeFrom(const Request& from) {\n// @@protoc_insertion_point(class_specific_merge_from_start:csce438.Request)\n  GOOGLE_DCHECK_NE(&from, this);\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  (void) cached_has_bits;\n\n  arguments_.MergeFrom(from.arguments_);\n  if (!from._internal_username().empty()) {\n    _internal_set_username(from._internal_username());\n  }\n  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);\n}\n\nvoid Request::CopyFrom(const Request& from) {\n// @@protoc_insertion_point(class_specific_copy_from_start:csce438.Request)\n  if (&from == this) return;\n  Clear();\n  MergeFrom(from);\n}\n\nbool Request::IsInitialized() const {\n  return true;\n}\n\nvoid Request::InternalSwap(Request* other) {\n  using std::swap;\n  auto* lhs_arena = GetArenaForAllocation();\n  auto* rhs_arena = other->GetArenaForAllocation();\n  _internal_metadata_.InternalSwap(&other->_internal_metadata_);\n  arguments_.InternalSwap(&other->arguments_);\n  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(\n      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),\n      &username_, lhs_arena,\n      &other->username_, rhs_arena\n  );\n}\n\n::PROTOBUF_NAMESPACE_ID::Metadata Request::GetMetadata() const {\n  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(\n      &descriptor_table_sns_2eproto_getter, &descriptor_table_sns_2eproto_once,\n      file_level_metadata_sns_2eproto[0]);\n}\n\n// ===================================================================\n\nclass Reply::_Internal {\n public:\n};\n\nReply::Reply(::PROTOBUF_NAMESPACE_ID::Arena* arena,\n                         bool is_message_owned)\n  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),\n  all_users_(arena),\n  following_users_(arena) {\n  SharedCtor();\n  if (!is_message_owned) {\n    RegisterArenaDtor(arena);\n  }\n  // @@protoc_insertion_point(arena_constructor:csce438.Reply)\n}\nReply::Reply(const Reply& from)\n  : ::PROTOBUF_NAMESPACE_ID::Message(),\n      all_users_(from.all_users_),\n      following_users_(from.following_users_) {\n  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);\n  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n  if (!from._internal_msg().empty()) {\n    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), \n      GetArenaForAllocation());\n  }\n  // @@protoc_insertion_point(copy_constructor:csce438.Reply)\n}\n\nvoid Reply::SharedCtor() {\nmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n}\n\nReply::~Reply() {\n  // @@protoc_insertion_point(destructor:csce438.Reply)\n  if (GetArenaForAllocation() != nullptr) return;\n  SharedDtor();\n  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();\n}\n\ninline void Reply::SharedDtor() {\n  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);\n  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n}\n\nvoid Reply::ArenaDtor(void* object) {\n  Reply* _this = reinterpret_cast< Reply* >(object);\n  (void)_this;\n}\nvoid Reply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {\n}\nvoid Reply::SetCachedSize(int size) const {\n  _cached_size_.Set(size);\n}\n\nvoid Reply::Clear() {\n// @@protoc_insertion_point(message_clear_start:csce438.Reply)\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  // Prevent compiler warnings about cached_has_bits being unused\n  (void) cached_has_bits;\n\n  all_users_.Clear();\n  following_users_.Clear();\n  msg_.ClearToEmpty();\n  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();\n}\n\nconst char* Reply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {\n#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure\n  while (!ctx->Done(&ptr)) {\n    ::PROTOBUF_NAMESPACE_ID::uint32 tag;\n    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);\n    switch (tag >> 3) {\n      // string msg = 1;\n      case 1:\n        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {\n          auto str = _internal_mutable_msg();\n          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);\n          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, \"csce438.Reply.msg\"));\n          CHK_(ptr);\n        } else\n          goto handle_unusual;\n        continue;\n      // repeated string all_users = 2;\n      case 2:\n        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {\n          ptr -= 1;\n          do {\n            ptr += 1;\n            auto str = _internal_add_all_users();\n            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);\n            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, \"csce438.Reply.all_users\"));\n            CHK_(ptr);\n            if (!ctx->DataAvailable(ptr)) break;\n          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));\n        } else\n          goto handle_unusual;\n        continue;\n      // repeated string following_users = 3;\n      case 3:\n        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {\n          ptr -= 1;\n          do {\n            ptr += 1;\n            auto str = _internal_add_following_users();\n            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);\n            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, \"csce438.Reply.following_users\"));\n            CHK_(ptr);\n            if (!ctx->DataAvailable(ptr)) break;\n          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));\n        } else\n          goto handle_unusual;\n        continue;\n      default:\n        goto handle_unusual;\n    }  // switch\n  handle_unusual:\n    if ((tag == 0) || ((tag & 7) == 4)) {\n      CHK_(ptr);\n      ctx->SetLastTag(tag);\n      goto message_done;\n    }\n    ptr = UnknownFieldParse(\n        tag,\n        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),\n        ptr, ctx);\n    CHK_(ptr != nullptr);\n  }  // while\nmessage_done:\n  return ptr;\nfailure:\n  ptr = nullptr;\n  goto message_done;\n#undef CHK_\n}\n\n::PROTOBUF_NAMESPACE_ID::uint8* Reply::_InternalSerialize(\n    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {\n  // @@protoc_insertion_point(serialize_to_array_start:csce438.Reply)\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  (void) cached_has_bits;\n\n  // string msg = 1;\n  if (!this->_internal_msg().empty()) {\n    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(\n      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,\n      \"csce438.Reply.msg\");\n    target = stream->WriteStringMaybeAliased(\n        1, this->_internal_msg(), target);\n  }\n\n  // repeated string all_users = 2;\n  for (int i = 0, n = this->_internal_all_users_size(); i < n; i++) {\n    const auto& s = this->_internal_all_users(i);\n    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(\n      s.data(), static_cast<int>(s.length()),\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,\n      \"csce438.Reply.all_users\");\n    target = stream->WriteString(2, s, target);\n  }\n\n  // repeated string following_users = 3;\n  for (int i = 0, n = this->_internal_following_users_size(); i < n; i++) {\n    const auto& s = this->_internal_following_users(i);\n    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(\n      s.data(), static_cast<int>(s.length()),\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,\n      \"csce438.Reply.following_users\");\n    target = stream->WriteString(3, s, target);\n  }\n\n  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {\n    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(\n        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);\n  }\n  // @@protoc_insertion_point(serialize_to_array_end:csce438.Reply)\n  return target;\n}\n\nsize_t Reply::ByteSizeLong() const {\n// @@protoc_insertion_point(message_byte_size_start:csce438.Reply)\n  size_t total_size = 0;\n\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  // Prevent compiler warnings about cached_has_bits being unused\n  (void) cached_has_bits;\n\n  // repeated string all_users = 2;\n  total_size += 1 *\n      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(all_users_.size());\n  for (int i = 0, n = all_users_.size(); i < n; i++) {\n    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(\n      all_users_.Get(i));\n  }\n\n  // repeated string following_users = 3;\n  total_size += 1 *\n      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(following_users_.size());\n  for (int i = 0, n = following_users_.size(); i < n; i++) {\n    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(\n      following_users_.Get(i));\n  }\n\n  // string msg = 1;\n  if (!this->_internal_msg().empty()) {\n    total_size += 1 +\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(\n        this->_internal_msg());\n  }\n\n  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);\n}\n\nconst ::PROTOBUF_NAMESPACE_ID::Message::ClassData Reply::_class_data_ = {\n    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,\n    Reply::MergeImpl\n};\nconst ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Reply::GetClassData() const { return &_class_data_; }\n\nvoid Reply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,\n                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {\n  static_cast<Reply *>(to)->MergeFrom(\n      static_cast<const Reply &>(from));\n}\n\n\nvoid Reply::MergeFrom(const Reply& from) {\n// @@protoc_insertion_point(class_specific_merge_from_start:csce438.Reply)\n  GOOGLE_DCHECK_NE(&from, this);\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  (void) cached_has_bits;\n\n  all_users_.MergeFrom(from.all_users_);\n  following_users_.MergeFrom(from.following_users_);\n  if (!from._internal_msg().empty()) {\n    _internal_set_msg(from._internal_msg());\n  }\n  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);\n}\n\nvoid Reply::CopyFrom(const Reply& from) {\n// @@protoc_insertion_point(class_specific_copy_from_start:csce438.Reply)\n  if (&from == this) return;\n  Clear();\n  MergeFrom(from);\n}\n\nbool Reply::IsInitialized() const {\n  return true;\n}\n\nvoid Reply::InternalSwap(Reply* other) {\n  using std::swap;\n  auto* lhs_arena = GetArenaForAllocation();\n  auto* rhs_arena = other->GetArenaForAllocation();\n  _internal_metadata_.InternalSwap(&other->_internal_metadata_);\n  all_users_.InternalSwap(&other->all_users_);\n  following_users_.InternalSwap(&other->following_users_);\n  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(\n      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),\n      &msg_, lhs_arena,\n      &other->msg_, rhs_arena\n  );\n}\n\n::PROTOBUF_NAMESPACE_ID::Metadata Reply::GetMetadata() const {\n  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(\n      &descriptor_table_sns_2eproto_getter, &descriptor_table_sns_2eproto_once,\n      file_level_metadata_sns_2eproto[1]);\n}\n\n// ===================================================================\n\nclass Message::_Internal {\n public:\n  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& timestamp(const Message* msg);\n};\n\nconst ::PROTOBUF_NAMESPACE_ID::Timestamp&\nMessage::_Internal::timestamp(const Message* msg) {\n  return *msg->timestamp_;\n}\nvoid Message::clear_timestamp() {\n  if (GetArenaForAllocation() == nullptr && timestamp_ != nullptr) {\n    delete timestamp_;\n  }\n  timestamp_ = nullptr;\n}\nMessage::Message(::PROTOBUF_NAMESPACE_ID::Arena* arena,\n                         bool is_message_owned)\n  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {\n  SharedCtor();\n  if (!is_message_owned) {\n    RegisterArenaDtor(arena);\n  }\n  // @@protoc_insertion_point(arena_constructor:csce438.Message)\n}\nMessage::Message(const Message& from)\n  : ::PROTOBUF_NAMESPACE_ID::Message() {\n  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);\n  username_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n  if (!from._internal_username().empty()) {\n    username_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_username(), \n      GetArenaForAllocation());\n  }\n  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n  if (!from._internal_msg().empty()) {\n    msg_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_msg(), \n      GetArenaForAllocation());\n  }\n  if (from._internal_has_timestamp()) {\n    timestamp_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from.timestamp_);\n  } else {\n    timestamp_ = nullptr;\n  }\n  // @@protoc_insertion_point(copy_constructor:csce438.Message)\n}\n\nvoid Message::SharedCtor() {\nusername_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\nmsg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\ntimestamp_ = nullptr;\n}\n\nMessage::~Message() {\n  // @@protoc_insertion_point(destructor:csce438.Message)\n  if (GetArenaForAllocation() != nullptr) return;\n  SharedDtor();\n  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();\n}\n\ninline void Message::SharedDtor() {\n  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);\n  username_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n  if (this != internal_default_instance()) delete timestamp_;\n}\n\nvoid Message::ArenaDtor(void* object) {\n  Message* _this = reinterpret_cast< Message* >(object);\n  (void)_this;\n}\nvoid Message::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {\n}\nvoid Message::SetCachedSize(int size) const {\n  _cached_size_.Set(size);\n}\n\nvoid Message::Clear() {\n// @@protoc_insertion_point(message_clear_start:csce438.Message)\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  // Prevent compiler warnings about cached_has_bits being unused\n  (void) cached_has_bits;\n\n  username_.ClearToEmpty();\n  msg_.ClearToEmpty();\n  if (GetArenaForAllocation() == nullptr && timestamp_ != nullptr) {\n    delete timestamp_;\n  }\n  timestamp_ = nullptr;\n  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();\n}\n\nconst char* Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {\n#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure\n  while (!ctx->Done(&ptr)) {\n    ::PROTOBUF_NAMESPACE_ID::uint32 tag;\n    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);\n    switch (tag >> 3) {\n      // string username = 1;\n      case 1:\n        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {\n          auto str = _internal_mutable_username();\n          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);\n          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, \"csce438.Message.username\"));\n          CHK_(ptr);\n        } else\n          goto handle_unusual;\n        continue;\n      // string msg = 2;\n      case 2:\n        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {\n          auto str = _internal_mutable_msg();\n          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);\n          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, \"csce438.Message.msg\"));\n          CHK_(ptr);\n        } else\n          goto handle_unusual;\n        continue;\n      // .google.protobuf.Timestamp timestamp = 3;\n      case 3:\n        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {\n          ptr = ctx->ParseMessage(_internal_mutable_timestamp(), ptr);\n          CHK_(ptr);\n        } else\n          goto handle_unusual;\n        continue;\n      default:\n        goto handle_unusual;\n    }  // switch\n  handle_unusual:\n    if ((tag == 0) || ((tag & 7) == 4)) {\n      CHK_(ptr);\n      ctx->SetLastTag(tag);\n      goto message_done;\n    }\n    ptr = UnknownFieldParse(\n        tag,\n        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),\n        ptr, ctx);\n    CHK_(ptr != nullptr);\n  }  // while\nmessage_done:\n  return ptr;\nfailure:\n  ptr = nullptr;\n  goto message_done;\n#undef CHK_\n}\n\n::PROTOBUF_NAMESPACE_ID::uint8* Message::_InternalSerialize(\n    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {\n  // @@protoc_insertion_point(serialize_to_array_start:csce438.Message)\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  (void) cached_has_bits;\n\n  // string username = 1;\n  if (!this->_internal_username().empty()) {\n    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(\n      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,\n      \"csce438.Message.username\");\n    target = stream->WriteStringMaybeAliased(\n        1, this->_internal_username(), target);\n  }\n\n  // string msg = 2;\n  if (!this->_internal_msg().empty()) {\n    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(\n      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,\n      \"csce438.Message.msg\");\n    target = stream->WriteStringMaybeAliased(\n        2, this->_internal_msg(), target);\n  }\n\n  // .google.protobuf.Timestamp timestamp = 3;\n  if (this->_internal_has_timestamp()) {\n    target = stream->EnsureSpace(target);\n    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::\n      InternalWriteMessage(\n        3, _Internal::timestamp(this), target, stream);\n  }\n\n  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {\n    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(\n        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);\n  }\n  // @@protoc_insertion_point(serialize_to_array_end:csce438.Message)\n  return target;\n}\n\nsize_t Message::ByteSizeLong() const {\n// @@protoc_insertion_point(message_byte_size_start:csce438.Message)\n  size_t total_size = 0;\n\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  // Prevent compiler warnings about cached_has_bits being unused\n  (void) cached_has_bits;\n\n  // string username = 1;\n  if (!this->_internal_username().empty()) {\n    total_size += 1 +\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(\n        this->_internal_username());\n  }\n\n  // string msg = 2;\n  if (!this->_internal_msg().empty()) {\n    total_size += 1 +\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(\n        this->_internal_msg());\n  }\n\n  // .google.protobuf.Timestamp timestamp = 3;\n  if (this->_internal_has_timestamp()) {\n    total_size += 1 +\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(\n        *timestamp_);\n  }\n\n  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);\n}\n\nconst ::PROTOBUF_NAMESPACE_ID::Message::ClassData Message::_class_data_ = {\n    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,\n    Message::MergeImpl\n};\nconst ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Message::GetClassData() const { return &_class_data_; }\n\nvoid Message::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,\n                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {\n  static_cast<Message *>(to)->MergeFrom(\n      static_cast<const Message &>(from));\n}\n\n\nvoid Message::MergeFrom(const Message& from) {\n// @@protoc_insertion_point(class_specific_merge_from_start:csce438.Message)\n  GOOGLE_DCHECK_NE(&from, this);\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  (void) cached_has_bits;\n\n  if (!from._internal_username().empty()) {\n    _internal_set_username(from._internal_username());\n  }\n  if (!from._internal_msg().empty()) {\n    _internal_set_msg(from._internal_msg());\n  }\n  if (from._internal_has_timestamp()) {\n    _internal_mutable_timestamp()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(from._internal_timestamp());\n  }\n  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);\n}\n\nvoid Message::CopyFrom(const Message& from) {\n// @@protoc_insertion_point(class_specific_copy_from_start:csce438.Message)\n  if (&from == this) return;\n  Clear();\n  MergeFrom(from);\n}\n\nbool Message::IsInitialized() const {\n  return true;\n}\n\nvoid Message::InternalSwap(Message* other) {\n  using std::swap;\n  auto* lhs_arena = GetArenaForAllocation();\n  auto* rhs_arena = other->GetArenaForAllocation();\n  _internal_metadata_.InternalSwap(&other->_internal_metadata_);\n  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(\n      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),\n      &username_, lhs_arena,\n      &other->username_, rhs_arena\n  );\n  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(\n      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),\n      &msg_, lhs_arena,\n      &other->msg_, rhs_arena\n  );\n  swap(timestamp_, other->timestamp_);\n}\n\n::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {\n  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(\n      &descriptor_table_sns_2eproto_getter, &descriptor_table_sns_2eproto_once,\n      file_level_metadata_sns_2eproto[2]);\n}\n\n// ===================================================================\n\nclass UserInfo::_Internal {\n public:\n};\n\nUserInfo::UserInfo(::PROTOBUF_NAMESPACE_ID::Arena* arena,\n                         bool is_message_owned)\n  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),\n  followers_(arena),\n  userfollows_(arena),\n  timeline_(arena) {\n  SharedCtor();\n  if (!is_message_owned) {\n    RegisterArenaDtor(arena);\n  }\n  // @@protoc_insertion_point(arena_constructor:csce438.UserInfo)\n}\nUserInfo::UserInfo(const UserInfo& from)\n  : ::PROTOBUF_NAMESPACE_ID::Message(),\n      followers_(from.followers_),\n      userfollows_(from.userfollows_),\n      timeline_(from.timeline_) {\n  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);\n  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n  if (!from._internal_name().empty()) {\n    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), \n      GetArenaForAllocation());\n  }\n  // @@protoc_insertion_point(copy_constructor:csce438.UserInfo)\n}\n\nvoid UserInfo::SharedCtor() {\nname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n}\n\nUserInfo::~UserInfo() {\n  // @@protoc_insertion_point(destructor:csce438.UserInfo)\n  if (GetArenaForAllocation() != nullptr) return;\n  SharedDtor();\n  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();\n}\n\ninline void UserInfo::SharedDtor() {\n  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);\n  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());\n}\n\nvoid UserInfo::ArenaDtor(void* object) {\n  UserInfo* _this = reinterpret_cast< UserInfo* >(object);\n  (void)_this;\n}\nvoid UserInfo::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {\n}\nvoid UserInfo::SetCachedSize(int size) const {\n  _cached_size_.Set(size);\n}\n\nvoid UserInfo::Clear() {\n// @@protoc_insertion_point(message_clear_start:csce438.UserInfo)\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  // Prevent compiler warnings about cached_has_bits being unused\n  (void) cached_has_bits;\n\n  followers_.Clear();\n  userfollows_.Clear();\n  timeline_.Clear();\n  name_.ClearToEmpty();\n  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();\n}\n\nconst char* UserInfo::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {\n#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure\n  while (!ctx->Done(&ptr)) {\n    ::PROTOBUF_NAMESPACE_ID::uint32 tag;\n    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);\n    switch (tag >> 3) {\n      // string name = 1;\n      case 1:\n        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {\n          auto str = _internal_mutable_name();\n          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);\n          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, \"csce438.UserInfo.name\"));\n          CHK_(ptr);\n        } else\n          goto handle_unusual;\n        continue;\n      // repeated string followers = 2;\n      case 2:\n        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {\n          ptr -= 1;\n          do {\n            ptr += 1;\n            auto str = _internal_add_followers();\n            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);\n            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, \"csce438.UserInfo.followers\"));\n            CHK_(ptr);\n            if (!ctx->DataAvailable(ptr)) break;\n          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));\n        } else\n          goto handle_unusual;\n        continue;\n      // repeated string userFollows = 3;\n      case 3:\n        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {\n          ptr -= 1;\n          do {\n            ptr += 1;\n            auto str = _internal_add_userfollows();\n            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);\n            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, \"csce438.UserInfo.userFollows\"));\n            CHK_(ptr);\n            if (!ctx->DataAvailable(ptr)) break;\n          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));\n        } else\n          goto handle_unusual;\n        continue;\n      // repeated .csce438.Message timeline = 4;\n      case 4:\n        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {\n          ptr -= 1;\n          do {\n            ptr += 1;\n            ptr = ctx->ParseMessage(_internal_add_timeline(), ptr);\n            CHK_(ptr);\n            if (!ctx->DataAvailable(ptr)) break;\n          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));\n        } else\n          goto handle_unusual;\n        continue;\n      default:\n        goto handle_unusual;\n    }  // switch\n  handle_unusual:\n    if ((tag == 0) || ((tag & 7) == 4)) {\n      CHK_(ptr);\n      ctx->SetLastTag(tag);\n      goto message_done;\n    }\n    ptr = UnknownFieldParse(\n        tag,\n        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),\n        ptr, ctx);\n    CHK_(ptr != nullptr);\n  }  // while\nmessage_done:\n  return ptr;\nfailure:\n  ptr = nullptr;\n  goto message_done;\n#undef CHK_\n}\n\n::PROTOBUF_NAMESPACE_ID::uint8* UserInfo::_InternalSerialize(\n    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {\n  // @@protoc_insertion_point(serialize_to_array_start:csce438.UserInfo)\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  (void) cached_has_bits;\n\n  // string name = 1;\n  if (!this->_internal_name().empty()) {\n    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(\n      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,\n      \"csce438.UserInfo.name\");\n    target = stream->WriteStringMaybeAliased(\n        1, this->_internal_name(), target);\n  }\n\n  // repeated string followers = 2;\n  for (int i = 0, n = this->_internal_followers_size(); i < n; i++) {\n    const auto& s = this->_internal_followers(i);\n    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(\n      s.data(), static_cast<int>(s.length()),\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,\n      \"csce438.UserInfo.followers\");\n    target = stream->WriteString(2, s, target);\n  }\n\n  // repeated string userFollows = 3;\n  for (int i = 0, n = this->_internal_userfollows_size(); i < n; i++) {\n    const auto& s = this->_internal_userfollows(i);\n    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(\n      s.data(), static_cast<int>(s.length()),\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,\n      \"csce438.UserInfo.userFollows\");\n    target = stream->WriteString(3, s, target);\n  }\n\n  // repeated .csce438.Message timeline = 4;\n  for (unsigned int i = 0,\n      n = static_cast<unsigned int>(this->_internal_timeline_size()); i < n; i++) {\n    target = stream->EnsureSpace(target);\n    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::\n      InternalWriteMessage(4, this->_internal_timeline(i), target, stream);\n  }\n\n  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {\n    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(\n        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);\n  }\n  // @@protoc_insertion_point(serialize_to_array_end:csce438.UserInfo)\n  return target;\n}\n\nsize_t UserInfo::ByteSizeLong() const {\n// @@protoc_insertion_point(message_byte_size_start:csce438.UserInfo)\n  size_t total_size = 0;\n\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  // Prevent compiler warnings about cached_has_bits being unused\n  (void) cached_has_bits;\n\n  // repeated string followers = 2;\n  total_size += 1 *\n      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(followers_.size());\n  for (int i = 0, n = followers_.size(); i < n; i++) {\n    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(\n      followers_.Get(i));\n  }\n\n  // repeated string userFollows = 3;\n  total_size += 1 *\n      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(userfollows_.size());\n  for (int i = 0, n = userfollows_.size(); i < n; i++) {\n    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(\n      userfollows_.Get(i));\n  }\n\n  // repeated .csce438.Message timeline = 4;\n  total_size += 1UL * this->_internal_timeline_size();\n  for (const auto& msg : this->timeline_) {\n    total_size +=\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);\n  }\n\n  // string name = 1;\n  if (!this->_internal_name().empty()) {\n    total_size += 1 +\n      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(\n        this->_internal_name());\n  }\n\n  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);\n}\n\nconst ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserInfo::_class_data_ = {\n    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,\n    UserInfo::MergeImpl\n};\nconst ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserInfo::GetClassData() const { return &_class_data_; }\n\nvoid UserInfo::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,\n                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {\n  static_cast<UserInfo *>(to)->MergeFrom(\n      static_cast<const UserInfo &>(from));\n}\n\n\nvoid UserInfo::MergeFrom(const UserInfo& from) {\n// @@protoc_insertion_point(class_specific_merge_from_start:csce438.UserInfo)\n  GOOGLE_DCHECK_NE(&from, this);\n  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;\n  (void) cached_has_bits;\n\n  followers_.MergeFrom(from.followers_);\n  userfollows_.MergeFrom(from.userfollows_);\n  timeline_.MergeFrom(from.timeline_);\n  if (!from._internal_name().empty()) {\n    _internal_set_name(from._internal_name());\n  }\n  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);\n}\n\nvoid UserInfo::CopyFrom(const UserInfo& from) {\n// @@protoc_insertion_point(class_specific_copy_from_start:csce438.UserInfo)\n  if (&from == this) return;\n  Clear();\n  MergeFrom(from);\n}\n\nbool UserInfo::IsInitialized() const {\n  return true;\n}\n\nvoid UserInfo::InternalSwap(UserInfo* other) {\n  using std::swap;\n  auto* lhs_arena = GetArenaForAllocation();\n  auto* rhs_arena = other->GetArenaForAllocation();\n  _internal_metadata_.InternalSwap(&other->_internal_metadata_);\n  followers_.InternalSwap(&other->followers_);\n  userfollows_.InternalSwap(&other->userfollows_);\n  timeline_.InternalSwap(&other->timeline_);\n  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(\n      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),\n      &name_, lhs_arena,\n      &other->name_, rhs_arena\n  );\n}\n\n::PROTOBUF_NAMESPACE_ID::Metadata UserInfo::GetMetadata() const {\n  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(\n      &descriptor_table_sns_2eproto_getter, &descriptor_table_sns_2eproto_once,\n      file_level_metadata_sns_2eproto[3]);\n}\n\n// @@protoc_insertion_point(namespace_scope)\n}  // namespace csce438\nPROTOBUF_NAMESPACE_OPEN\ntemplate<> PROTOBUF_NOINLINE ::csce438::Request* Arena::CreateMaybeMessage< ::csce438::Request >(Arena* arena) {\n  return Arena::CreateMessageInternal< ::csce438::Request >(arena);\n}\ntemplate<> PROTOBUF_NOINLINE ::csce438::Reply* Arena::CreateMaybeMessage< ::csce438::Reply >(Arena* arena) {\n  return Arena::CreateMessageInternal< ::csce438::Reply >(arena);\n}\ntemplate<> PROTOBUF_NOINLINE ::csce438::Message* Arena::CreateMaybeMessage< ::csce438::Message >(Arena* arena) {\n  return Arena::CreateMessageInternal< ::csce438::Message >(arena);\n}\ntemplate<> PROTOBUF_NOINLINE ::csce438::UserInfo* Arena::CreateMaybeMessage< ::csce438::UserInfo >(Arena* arena) {\n  return Arena::CreateMessageInternal< ::csce438::UserInfo >(arena);\n}\nPROTOBUF_NAMESPACE_CLOSE\n\n// @@protoc_insertion_point(global_scope)\n#include <google/protobuf/port_undef.inc>\n","undoManager":{"mark":0,"position":-1,"stack":[[{"start":{"row":463,"column":33},"end":{"row":463,"column":46},"action":"remove","lines":["add_all_users"],"id":2},{"start":{"row":463,"column":33},"end":{"row":464,"column":0},"action":"insert","lines":["",""]},{"start":{"row":464,"column":0},"end":{"row":464,"column":12},"action":"insert","lines":["            "]},{"start":{"row":464,"column":12},"end":{"row":465,"column":0},"action":"insert","lines":["",""]},{"start":{"row":465,"column":0},"end":{"row":465,"column":12},"action":"insert","lines":["            "]},{"start":{"row":465,"column":12},"end":{"row":466,"column":0},"action":"insert","lines":["",""]},{"start":{"row":466,"column":0},"end":{"row":466,"column":12},"action":"insert","lines":["            "]}]]},"ace":{"folds":[],"scrolltop":14970,"scrollleft":0,"selection":{"start":{"row":1088,"column":46},"end":{"row":1088,"column":58},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":514,"state":"start","mode":"ace/mode/c_cpp"}},"timestamp":1646078722640}